<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>

<#
	string path= Host.ResolveAssemblyReference("$(ProjectDir)")+"Models";
	var files = new DirectoryInfo(path).GetFiles("*Entity.cs") ;
#>
//------------------------------------------------------------------------------
// <auto-generated>
// 此文件由T4模板生成，请勿手动修改
// by hoho
// <#=DateTime.Now#>
// </auto-generated>
//------------------------------------------------------------------------------

using Hos.ScheduleMaster.Core.Models;
using Hos.ScheduleMaster.Core.Repository;
using Microsoft.EntityFrameworkCore;
using System.Linq;
using Hos.ScheduleMaster.Core.EntityFramework;

namespace Hos.ScheduleMaster.Core.Models
{
    public class SmDbContext : DbContext
    {
		protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
		{
			base.OnConfiguring(optionsBuilder);

			optionsBuilder.UseDatabase();
		}

		protected override void OnModelCreating(ModelBuilder modelBuilder)
		{
            base.OnModelCreating(modelBuilder);		

			 //字段类型适配
			 <#
				foreach (var entitySet in files)
				{
				string filename = entitySet.Name.Replace(entitySet.Extension, "");
				if(filename.EndsWith("IEntity")) continue;
			#>
modelBuilder.FixColumnsDataType<<#=filename#>>();
			<#
			    }
			#>
            

            //创建索引
            modelBuilder.CreateIndexes();

			//初始化数据
            modelBuilder.SeedData();
		}
		<#
	    foreach (var entitySet in files)
	    {
		string filename = entitySet.Name.Replace(entitySet.Extension, "");
		if(filename.EndsWith("IEntity")) continue;
	#>
	public virtual DbSet<<#=filename#>> <#=filename.Substring(0,entitySet.Name.IndexOf("Entity"))#>s { get; set; }

	<#
	    }
	#>

		/// <summary>
        /// 获取数据库当前时间函数
        /// </summary>
        public string GetDbNowDateTime
        {
            get
            {
                if (ConfigurationCache.DbConnector.Provider ==  DbProvider.SQLServer)
                {
                    return "getdate()";
                }
                return "now()";
            }
        }
    }


}